version: '3.7'

services:
  prometheus:
    image: prom/prometheus:latest
    restart: always
    container_name: prometheus
    hostname: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules/alert_rules.yml:/etc/prometheus/rules/alert_rules.yml
    command: --config.file=/etc/prometheus/prometheus.yml
    environment:
      TZ: 'Asia/Taipei'

  telegraf:
    image: telegraf:1.27.2
    restart: always
    container_name: telegraf
    hostname: telegraf
    ports:
      - 9273:9273
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
      - ./telegraf/elastic/:/etc/telegraf/elastic/
    command: telegraf --config /etc/telegraf/telegraf.conf --config-directory /etc/telegraf/elastic/
    
  grafana:
    container_name: grafana
    hostname: grafana
    build:
      context: ./grafana
      dockerfile: Dockerfile
    image: cask-grafana:1.0.0
    #restart: unless-stopped
    restart: always
    entrypoint: /run.sh
    depends_on:
      es_node_01:
        condition: service_healthy
      es_node_02:
        condition: service_healthy
      es_node_03:
        condition: service_healthy
    ports:
      - 5601:5601
      - 3000:3000
    environment:
      - ELASTICSEARCH_HOSTS=["http://es_node_01:9200", "http://es_node_02:9200", "http://es_node_03:9200"]
      - GF_DEFAULT_APP_MODE=development
    
    volumes:
      - grafana_data:/var/lib/grafana
      #- ./grafana/dist:/var/lib/grafana/plugins/volkovlabs-app
      - ./grafana//provisioning:/etc/grafana/provisioning
      - ./grafana/icon/:/usr/share/grafana/public/img/icon

  nginx:
    container_name: nginx
    build: ./nginx
    restart: always
    environment:
      - GRAFANA_HOST=host.docker.internal
    ports:
      - 80:80/tcp
      - 443:443/tcp
    depends_on:
      - grafana

  es_node_01:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: es_node_01
      discovery.seed_hosts: es_node_01, es_node_02, es_node_03
      cluster.initial_master_nodes: es_node_01, es_node_02, es_node_03
      cluster.name: mycluster
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: -Xms256m -Xmx256m
    volumes:
      - es_data_01:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 120
  es_node_02:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    ports:
      - 9201:9200
      - 9301:9300
    environment:
      node.name: es_node_02
      discovery.seed_hosts: es_node_01, es_node_02, es_node_03
      cluster.initial_master_nodes: es_node_01, es_node_02, es_node_03
      cluster.name: mycluster
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: -Xms256m -Xmx256m
    volumes:
      - es_data_02:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 120
  es_node_03:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
    ports:
      - 9202:9200
      - 9303:9300
    environment:
      node.name: es_node_03
      discovery.seed_hosts: es_node_01, es_node_02, es_node_03
      cluster.initial_master_nodes: es_node_01, es_node_02, es_node_03
      cluster.name: mycluster
      bootstrap.memory_lock: "true"
      ES_JAVA_OPTS: -Xms256m -Xmx256m
    volumes:
      - es_data_03:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    #image: docker.elastic.co/kibana/kibana-oss:7.10.2
    image: arm64v8/kibana:7.17.10
    depends_on:
      es_node_01:
        condition: service_healthy
      es_node_02:
        condition: service_healthy
      es_node_03:
        condition: service_healthy
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=["http://es_node_01:9200", "http://es_node_02:9200", "http://es_node_03:9200"]
volumes:
  grafana_data: {}
  es_data_01: {}
  es_data_02: {}
  es_data_03: {}